3rd Year Project Ideas:

1) Intrapolation between brute force search and greedy algorithms
and an exploration of the local structures of NP-Hard Problems
1.5) Approximation algorithms?

2) Something in natural language?
2.5) Sentence Fuzzing: gettings setences that mean the same thing
but phrased differently

3) Adversarial RL trading bots

---- Shitty Machine Learning Ideas below here ----
1) Text -> Img & Img -> Text
2) Automatic Tagging of source code for better search functionality on github
3) Invertible GAN for image embeddings
4) Attempt robustness against adversarial attacks by having learned
    values that pixels map to. So each pixel maps to one of
    eight fixed values, with learned intervals.
5) Analysis on robustness of image detection under increasingly
    agressive image manipulation, preprocessing, crops and
    obfuscations.
6) Determine empirically the trade-off when dropping unused connections, between accuracy and size and robustness.
7) Allow for multiple word vectors for certain strings to allow for disambiguation
8) Learned axis in word-vector space for sentiment analysis and other arbitrary discovered properties (intensity, chirality, etc.)
9) Better than SIFT descriptors using autoencoders or similar.
10) Isomorphisms of Neural Networks, attempt to enforce some notion of uniqueness of learned
solutions. Remove permutations of neurons. Two networks with equivalent activations across all
data should have identical weights.
11) Do all neurons in a network have similar topologies, or are there distinct types of neurons
in different networks trained on different tasks?
12) Automatic regonition of "forms" of equations, i.e. F: [Equations] --> [Types]
F(y^2 = x^3 + ax + b) = "Elliptic Curve"

--- Misc Ideas ---
1) Rank the irrationality of common numbers by determining how well
    they can be approximated as fractions of
    arbitrary bounded size, then sort them.

2) Article explaining how to discover quicksort from scratch
3) Treat tournaments as stochastic sorting algorithms, analyse the variance
    of different tournament systems (elimination, swiss, Elo, round robin...)
4) Formalise a notion of a consistently uniform sequence and consider whether
    this can be used to derandomise algorithms.
5) Options + Universal Approximation Theorems
6) CUDA strange attractors, sandpiles

--- Aesthetics Ideas ---
1) Strange Attractors Plots or Animations
2) Abelian Sandpiles
3) Complex Roots of functions
4) Regions of Convergence of recurrances (Mandelbrot & co)
